<?php
/**
 * Copyright 2020 Google LLC
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * version 2 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 */

use Drupal\node\NodeInterface;


/**
 * Force rewrite of Node Grants for API Doc nodes associated to the API Doc node
 *
 * @param NodeInterface $node
 */
function _apigee_api_product_catalog_rewrite_apidoc_grants(NodeInterface $node){
    if ($node->getType() == 'api_product') {
        foreach($node->get('field_api_doc')->referencedEntities() as $item){
            \Drupal::entityTypeManager()->getAccessControlHandler('node')->writeGrants($item);
        }
    }
}
/**
 * Implements hook_ENTITY_ID_insert
 * @param NodeInterface $node
 */
function apigee_api_product_catalog_node_insert(NodeInterface $node)
{
    _apigee_api_product_catalog_rewrite_apidoc_grants($node);
}

/**
 * Implements hook_ENTITY_ID_update
 * @param NodeInterface $node
 */
function apigee_api_product_catalog_node_update(NodeInterface $node)
{
    _apigee_api_product_catalog_rewrite_apidoc_grants($node);
}

/**
 * Implements hook_ENTITY_ID_delete
 * @param NodeInterface $node
 */
function apigee_api_product_catalog_node_delete(NodeInterface $node)
{
    _apigee_api_product_catalog_rewrite_apidoc_grants($node);
}

/**
 * Implements hook_cron
 *
 * Load all the products from edge and write it to the json file which is
 * consumed by the feeds module to generate the API Produce Nodes
 */
function apigee_api_product_catalog_cron(){
  /* @var $entity_manager \Drupal\Core\Entity\EntityTypeManagerInterface */
  $entity_manager = Drupal::service("entity_type.manager");
  /* @var $apiProduct \Drupal\apigee_edge\Entity\ApiProduct */
  $serializer = new \Apigee\Edge\Serializer\EntitySerializer([new \Apigee\Edge\Api\Management\Serializer\ApiProductSerializer()]);
  $apiproducts = [];
  foreach($entity_manager->getStorage("api_product")->loadMultiple() as $apiProduct) {
    /* @var $sdkobj \Apigee\Edge\Api\Management\Entity\ApiProduct */
    $apiproducts['apiProduct'][] = $apiProduct->decorated();
  }
  file_put_contents("private://apigee_api_product_feed_importer/apiproducts.json", $serializer->serialize($apiproducts,'json'));
}

<?php
/**
 * Copyright 2020 Google LLC
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * version 2 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 */

use Drupal\Core\Session\AccountInterface;
use Drupal\node\NodeInterface;

/**
 * Return the realm string to use for a particular role.
 *
 * @param $role
 *
 * @return string
 */
function apigee_api_product_catalog_audience_roles_realm($role) {
  return "apigee_api_product_catalog_audience_roles:$role";
}

/**
 * @param NodeInterface $node
 *
 * @return array
 */
function apigee_api_product_catalog_audience_roles_node_access_records(NodeInterface $node) {
  $grants = [];
  if ($node->getType() == 'api_product') {
    /* @var $role Drupal\Core\Field\Plugin\Field\FieldType\StringItem */
    foreach ($node->get("field_audience_roles") as $role) {
      $grants[] = [
        'realm' => apigee_api_product_catalog_audience_roles_realm($role->getString()),
        'gid' => 1,
        'grant_view' => 1,
        'grant_update' => 0,
        'grant_delete' => 0,
      ];
    }
  }
  else {
    if ($node->getType() == 'apidoc') {
      $nids = Drupal::entityQuery('node')
        ->condition('type', 'api_product')
        ->condition('field_api_doc', $node->id())
        ->execute();
      foreach (\Drupal\node\Entity\Node::loadMultiple($nids) as $product_node) {
        $grants += apigee_api_product_catalog_audience_roles_node_access_records($product_node);
      }
    }
  }
  return $grants;
}

/**
 * @param AccountInterface $account
 * @param $op
 *
 * @return array
 */
function apigee_api_product_catalog_audience_roles_node_grants(AccountInterface $account, $op) {
  $grants = [];
  if ($account->id()) {
    foreach ($account->getRoles() as $role) {
      $grants[apigee_api_product_catalog_audience_roles_realm($role)] = [1];
    }
  }
  else {
    $grants[apigee_api_product_catalog_audience_roles_realm(AccountInterface::ANONYMOUS_ROLE)] = [1];
  }
  return $grants;
}

<?php
/**
 * Copyright 2020 Google LLC
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * version 2 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 */


/**
 * Create a new Feed item to process the API Product json
 * This is supposed to be import the API Products from Apigee into
 */
function apigee_api_product_catalog_install() {
  $arr = [
    'type' =>
      [
        0 =>
          [
            'target_id' => 'api_product_json_importer',
          ],
      ],
    'title' =>
      [
        0 =>
          [
            'value' => 'Apigee APIProduct Importer',
          ],
      ],
    'source' =>
      [
        0 =>
          [
            'value' => 'private://apigee_api_product_feed_importer/apiproducts.json',
          ],
      ],
  ];
  /* @var $filesystem \Drupal\Core\File\FileSystemInterface */
  $filesystem = \Drupal::service('file_system');
  $filesystem->mkdir("private://apigee_api_product_feed_importer/");
  apigee_api_product_catalog_cron();
  $feed = \Drupal\feeds\Entity\Feed::create($arr);
  $feed->save();
}

/**
 * Ensure the private file system is setup for this module to work.
 *
 * @param $phase
 *
 * @return array
 */
function apigee_api_product_catalog_requirements($phase) {
  $requirements = [];
  /* @var $filesystem \Drupal\Core\File\FileSystemInterface */
  $filesystem = \Drupal::service('file_system');
  $file_private_path = $filesystem->realpath("private://");
  if (!(bool) $file_private_path) {
    $url = Url::fromUri('https://www.drupal.org/docs/8/modules/apigee-edge/configure-the-connection-to-apigee-edge#configure-private-file');
    $requirements[] = [
      'description' => t('To use this module the private file system needs to be setup. ' . \Drupal\Core\Link::fromTextAndUrl("Documentation", $url)),
      'title' => t('Private file system not set'),
      'severity' => REQUIREMENT_ERROR,
    ];
  }
  return $requirements;
}
